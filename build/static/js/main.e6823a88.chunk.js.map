{"version":3,"sources":["components/PersonForm.jsx","components/Person.jsx","components/PersonList.jsx","components/Filter.jsx","components/Notification.jsx","services/persons.js","App.jsx","index.js"],"names":["PersonForm","onSubmit","onNameChange","onNumberChange","name","number","value","onChange","type","Person","onClick","PersonList","filter","persons","filteredPersons","person","toLowerCase","includes","length","map","filteredPerson","key","Filter","Notification","notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","setNotification","useEffect","phoneService","initialData","handleNotification","setTimeout","event","target","preventDefault","find","window","confirm","returnedPerson","p","catch","handleUpdate","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6823a88.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = ({onSubmit,onNameChange,onNumberChange,name,number}) => {\r\n\r\n    return <form onSubmit={onSubmit}>\r\n    <div>name: <input value={name}\r\n                onChange={onNameChange} />\r\n    </div>\r\n    <div>number: <input value={number}\r\n                 onChange={onNumberChange}/>\r\n    </div>\r\n    <div>\r\n        <button type='submit'>add</button>\r\n    </div>\r\n  </form>\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({name,number,onClick}) => {\r\n    return <div>\r\n        <span>{name} {number} </span>\r\n        <button onClick={onClick}>delete</button>\r\n    </div>\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\n// If search field is empty, it will render the entire persons array\r\nconst PersonList = ({filter,persons,onClick}) => {\r\n    \r\n    const filteredPersons = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\r\n    if(filteredPersons.length === 0){\r\n        return <h2>No persons matching the criteria were found</h2>\r\n    } \r\n    return <div>\r\n        <h2>Numbers</h2>\r\n        {filteredPersons.map(filteredPerson => \r\n        <Person key={filteredPerson.name} name={filteredPerson.name} number={filteredPerson.number} onClick={() => onClick(filteredPerson)} />)}    \r\n        </div>\r\n\r\n}\r\n\r\nexport default PersonList","import React from 'react'\r\n\r\nconst Filter = ({filter, onChange}) => {\r\n    return <div>\r\n        <p>filter shown by</p>\r\n        <input type='text' onChange={onChange} value={filter}/>\r\n    </div>\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\nimport './Notification.css'\r\n\r\nconst Notification = ({ notification }) => {\r\n    \r\n    const {message,type} = notification\r\n    \r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={`notification ${type}`}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n} \r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport PersonForm from './components/PersonForm'\r\nimport PersonList from './components/PersonList'\r\nimport Filter from './components/Filter'\r\nimport Notification from './components/Notification'\r\nimport phoneService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber] = useState('')\r\n  const [ filter, setFilter] = useState('')\r\n  const [notification, setNotification] = useState({message: null,type: null})\r\n\r\n  useEffect(() => {phoneService\r\n  .getAll()\r\n  .then(initialData => {\r\n    setPersons(initialData)\r\n  })},[])\r\n\r\n  const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n  }\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n  const handleNotification = (message,type) => {\r\n  // Type to indicate if its an error message or a notification\r\n    setNotification({message,type})\r\n    setTimeout(() => {\r\n      setNotification({message: null})\r\n    }, 5000)\r\n  }\r\n  const handleUpdate = () => {\r\n    \r\n    const person = persons.find(person => person.name.toLowerCase() === newName.toLowerCase() ) \r\n\r\n    window.confirm(`${person.name} is already present in the phonebook, replace old number with the new one?`) &&\r\n    phoneService\r\n    .update(person.id,{...person,number:newNumber})\r\n    .then(returnedPerson => {setPersons(persons.map(p=>p.id !== person.id ? p : returnedPerson))\r\n      handleNotification(`The number for ${returnedPerson.name} was updated`,'message')})\r\n      .catch(()=> {handleNotification(`${person.name} was already removed from server`,'error')\r\n      setPersons(persons.filter(p=>p.id !== person.id))\r\n    })\r\n  }\r\n  \r\n  const handleAddPerson = (event) => {\r\n    event.preventDefault()\r\n\r\n    setFilter('')\r\n    \r\n    newName === '' ? handleNotification('Person field cannot be empty','error')\r\n    : newNumber === '' ? handleNotification('Number field cannot be empty','error')\r\n    : persons.find(person => person.name.toLowerCase() === newName.toLowerCase() ) \r\n    ? handleUpdate()\r\n    :phoneService\r\n    .create({name: newName,number: newNumber})\r\n    .then(returnedPerson => {setPersons(persons.concat(returnedPerson))\r\n    handleNotification(`${returnedPerson.name} was added to phonebook`,'message')})\r\n    // Possible to create two with same key if not in sync with database\r\n    setNewName('')\r\n    setNewNumber('')\r\n\r\n  }\r\n\r\n  const handleDelete = (person) => {\r\n    window.confirm(`Delete ${person.name}?`) &&\r\n    phoneService\r\n    .deletePerson(person.id)\r\n    .then(() => {setPersons(persons.filter(p=>p.id !== person.id))\r\n    handleNotification(`${person.name} was deleted from phoneBook`,'message')})\r\n    .catch(()=> {handleNotification(`${person.name} was already deleted from server`,'error')\r\n            setPersons(persons.filter(p=>p.id !== person.id))\r\n  })\r\n  }\r\n\r\n  return (<div>\r\n      <h2>Phonebook</h2>\r\n      <Notification notification={notification} />\r\n      <Filter filter={filter} onChange={handleFilterChange} />\r\n      <h3>Add a new person</h3>\r\n      <PersonForm onSubmit={handleAddPerson} onNameChange={handleNameChange} onNumberChange={handleNumberChange} \r\n      name={newName} number={newNumber}/>\r\n      <PersonList filter={filter} persons={persons} onClick={handleDelete}/>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}